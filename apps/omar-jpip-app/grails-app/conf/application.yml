---
# Set the context path of the application.
server:
  contextPath: /omar-jpip

# Define the production database values.
environments:
  production:
    dataSource:
      pooled: true
      jmxExport: true
      driverClassName: org.postgresql.Driver
      dialect:  org.hibernate.spatial.dialect.postgis.PostgisDialect
      url: jdbc:postgresql://localhost:5432/omar_db
      username: postgres
      password: password

logging:
  config: classpath:logback.groovy

omar:
  jpip:
    server:
      # Is the location where to write the JP2 images.
      cache: /data/jpip-cache
      # The location of the JPIP server IP.
      # This is the actual streaming server IP, not the jpip-app IP.
      # The jpip-app just translates imagery into a JP2 file for streaming.
      ip:    jpip.ossim.io
      log:   /data/omar/jpip_server/log/omar-jpip-server-log.txt
      # The full URL of the jpip server.
      # This is the actual streaming server IP, not the jpip-app IP.
      # The jpip-app just translates imagery into a JP2 file for streaming.
      url:   jpip://jpip.ossim.io

quartz:
  # Specifies if the quartz queues should be persisted.
  # Currently have not setup persitent storeage with quartz.
  # Currently set to "false".
  jdbcStore: false
  threadPool:
    # Defines the number of concurrent threads that can run.
    threadCount: 4

# Define the http protocols that swagger is allowed to use.
swagger:
  schemes:
    - HTTPS
    - HTTP

---
grails:
    cors:
      enabled: true
    resources:
        pattern: '/**'
    profile: web
    codegen:
        defaultPackage: omar.jpip
    spring:
        transactionManagement:
            proxies: false
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
  enabled: true
  health:
    enabled: true
  actuator:
    sensitive: false
  beans:
    sensitive: false
  metrics:
    sensitive: false
  configprops:
    sensitive: false
  trace:
    sensitive: false
  mappings:
    sensitive: false
  env:
    sensitive: false
---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.postgresql.Driver
    username: postgres
    password: postgres
    dialect: org.hibernate.dialect.PostgreSQL94Dialect

environments:
    development:
        dataSource:
            dbCreate: create-drop
#            url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            url: jdbc:postgresql:omardb-${OSSIM_VERSION}-dev
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            # This is defined above.
            #url: jdbc:h2:./prodDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

---
omar:
  jpip:
    oms:
      chipper:
        # Is the location of the chipper endpoint for chipping imagery.
        url: 'http://localhost:8084/omar-oms/chipper/executeChipper'

        # Is the default histogram operation that is applied if no argument is passed in the styles.
        # e.g.: "none", "auto-minmax", "auto-percentile", "std-stretch-1", "std-stretch-2", or "std-stretch-3"
        histOp: auto-minmax
